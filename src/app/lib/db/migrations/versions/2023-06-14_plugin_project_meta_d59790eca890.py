"""plugin_project_meta

Revision ID: d59790eca890
Revises: 99a1e0074245
Create Date: 2023-06-14 19:11:55.354383

"""
import sqlalchemy as sa
from alembic import op
from litestar.contrib.sqlalchemy.types import GUID, DateTimeUTC
from sqlalchemy.dialects import postgresql

__all__ = ["downgrade", "upgrade"]


sa.GUID = GUID

# revision identifiers, used by Alembic.
revision = "d59790eca890"
down_revision = "99a1e0074245"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column("backlog", sa.Column("created_at", DateTimeUTC(timezone=True), nullable=False))
    op.add_column("backlog", sa.Column("updated_at", DateTimeUTC(timezone=True), nullable=False))
    op.drop_column("backlog", "updated")
    op.drop_column("backlog", "created")
    op.add_column("backlog_audit", sa.Column("created_at", DateTimeUTC(timezone=True), nullable=False))
    op.add_column("backlog_audit", sa.Column("updated_at", DateTimeUTC(timezone=True), nullable=False))
    op.drop_column("backlog_audit", "updated")
    op.drop_column("backlog_audit", "created")
    op.add_column("project", sa.Column("plugin_meta", postgresql.JSONB(astext_type=sa.Text()), nullable=False))
    op.add_column("project", sa.Column("created_at", DateTimeUTC(timezone=True), nullable=False))
    op.add_column("project", sa.Column("updated_at", DateTimeUTC(timezone=True), nullable=False))
    op.drop_column("project", "updated")
    op.drop_column("project", "created")
    op.add_column("team", sa.Column("created_at", DateTimeUTC(timezone=True), nullable=False))
    op.add_column("team", sa.Column("updated_at", DateTimeUTC(timezone=True), nullable=False))
    op.drop_column("team", "updated")
    op.drop_column("team", "created")
    op.add_column("team_invitation", sa.Column("created_at", DateTimeUTC(timezone=True), nullable=False))
    op.add_column("team_invitation", sa.Column("updated_at", DateTimeUTC(timezone=True), nullable=False))
    op.drop_column("team_invitation", "updated")
    op.drop_column("team_invitation", "created")
    op.add_column("team_member", sa.Column("created_at", DateTimeUTC(timezone=True), nullable=False))
    op.add_column("team_member", sa.Column("updated_at", DateTimeUTC(timezone=True), nullable=False))
    op.drop_column("team_member", "updated")
    op.drop_column("team_member", "created")
    op.add_column("user_account", sa.Column("created_at", DateTimeUTC(timezone=True), nullable=False))
    op.add_column("user_account", sa.Column("updated_at", DateTimeUTC(timezone=True), nullable=False))
    op.alter_column(
        "user_account",
        "verified_at",
        existing_type=postgresql.TIMESTAMP(),
        type_=DateTimeUTC(timezone=True),
        existing_nullable=True,
    )
    op.drop_column("user_account", "updated")
    op.drop_column("user_account", "created")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column("user_account", sa.Column("created", postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.add_column("user_account", sa.Column("updated", postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.alter_column(
        "user_account",
        "verified_at",
        existing_type=DateTimeUTC(timezone=True),
        type_=postgresql.TIMESTAMP(),
        existing_nullable=True,
    )
    op.drop_column("user_account", "updated_at")
    op.drop_column("user_account", "created_at")
    op.add_column("team_member", sa.Column("created", postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.add_column("team_member", sa.Column("updated", postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.drop_column("team_member", "updated_at")
    op.drop_column("team_member", "created_at")
    op.add_column("team_invitation", sa.Column("created", postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.add_column("team_invitation", sa.Column("updated", postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.drop_column("team_invitation", "updated_at")
    op.drop_column("team_invitation", "created_at")
    op.add_column("team", sa.Column("created", postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.add_column("team", sa.Column("updated", postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.drop_column("team", "updated_at")
    op.drop_column("team", "created_at")
    op.add_column("project", sa.Column("created", postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.add_column("project", sa.Column("updated", postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.drop_column("project", "updated_at")
    op.drop_column("project", "created_at")
    op.drop_column("project", "plugin_meta")
    op.add_column("backlog_audit", sa.Column("created", postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.add_column("backlog_audit", sa.Column("updated", postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.drop_column("backlog_audit", "updated_at")
    op.drop_column("backlog_audit", "created_at")
    op.add_column("backlog", sa.Column("created", postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.add_column("backlog", sa.Column("updated", postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.drop_column("backlog", "updated_at")
    op.drop_column("backlog", "created_at")
    # ### end Alembic commands ###
