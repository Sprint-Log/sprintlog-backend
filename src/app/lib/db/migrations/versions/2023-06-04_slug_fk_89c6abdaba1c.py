"""slug_fk

Revision ID: 89c6abdaba1c
Revises: 2dc4cdce2323
Create Date: 2023-06-04 00:38:08.536501

"""
import sqlalchemy as sa
from alembic import op
from litestar.contrib.sqlalchemy.types import GUID

__all__ = ["downgrade", "upgrade"]


sa.GUID = GUID

# revision identifiers, used by Alembic.
revision = "89c6abdaba1c"
down_revision = "2dc4cdce2323"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column("backlog", sa.Column("project_slug", sa.String(), nullable=True))
    op.alter_column("backlog", "owner_id", existing_type=sa.UUID(), nullable=True)
    op.create_index(op.f("ix_backlog_title"), "backlog", ["title"], unique=False)
    op.drop_constraint("fk_backlog_project_id_project", "backlog", type_="foreignkey")
    op.create_foreign_key(op.f("fk_backlog_project_slug_project"), "backlog", "project", ["project_slug"], ["slug"])
    op.drop_column("backlog", "project_id")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column("backlog", sa.Column("project_id", sa.UUID(), autoincrement=False, nullable=False))
    op.drop_constraint(op.f("fk_backlog_project_slug_project"), "backlog", type_="foreignkey")
    op.create_foreign_key("fk_backlog_project_id_project", "backlog", "project", ["project_id"], ["id"])
    op.drop_index(op.f("ix_backlog_title"), table_name="backlog")
    op.alter_column("backlog", "owner_id", existing_type=sa.UUID(), nullable=False)
    op.drop_column("backlog", "project_slug")
    # ### end Alembic commands ###
