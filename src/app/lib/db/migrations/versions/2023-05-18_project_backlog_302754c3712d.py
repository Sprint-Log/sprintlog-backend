"""project_backlog

Revision ID: 302754c3712d
Revises: 8e1731f221c4
Create Date: 2023-05-18 02:52:34.339231

"""
import sqlalchemy as sa
from alembic import op
from litestar.contrib.sqlalchemy.types import GUID, JSON

__all__ = ["downgrade", "upgrade"]


sa.GUID = GUID
sa.JSON = JSON

# revision identifiers, used by Alembic.
revision = "302754c3712d"
down_revision = "8e1731f221c4"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "project",
        sa.Column("slug", sa.String(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=False),
        sa.Column("start_date", sa.Date(), nullable=False),
        sa.Column("end_date", sa.Date(), nullable=False),
        sa.Column("_sentinel", sa.Integer(), nullable=True),
        sa.Column("id", sa.GUID(length=16), nullable=False),
        sa.Column("created", sa.DateTime(), nullable=False),
        sa.Column("updated", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_project")),
        sa.UniqueConstraint("slug", name=op.f("uq_project_slug")),
    )
    op.create_table(
        "backlog",
        sa.Column("title", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("ref_id", sa.String(), nullable=False),
        sa.Column("progress", sa.Enum("empty", "a_third", "two_third", "full", name="progressenum"), nullable=False),
        sa.Column("sprint_number", sa.Integer(), nullable=False),
        sa.Column("priority", sa.Enum("low", "med", "hi", name="priorityenum"), nullable=False),
        sa.Column(
            "status",
            sa.Enum("new", "started", "checked_in", "completed", "cancelled", name="statusenum"),
            nullable=False,
        ),
        sa.Column("is_task", sa.Boolean(), nullable=False),
        sa.Column(
            "category",
            sa.Enum(
                "ideas",
                "issues",
                "maintenance",
                "finances",
                "innovation",
                "bugs",
                "features",
                "security",
                "attention",
                "backend",
                "database",
                "desktop",
                "mobile",
                "intl",
                "design",
                "analytics",
                "automation",
                name="tagenum",
            ),
            nullable=False,
        ),
        sa.Column("est_days", sa.Float(), nullable=False),
        sa.Column("beg_date", sa.Date(), nullable=False),
        sa.Column("end_date", sa.Date(), nullable=False),
        sa.Column("due_date", sa.Date(), nullable=False),
        sa.Column("assignee_id", sa.GUID(length=16), nullable=True),
        sa.Column("owner_id", sa.GUID(length=16), nullable=False),
        sa.Column("project_id", sa.GUID(length=16), nullable=False),
        sa.Column("_sentinel", sa.Integer(), nullable=True),
        sa.Column("id", sa.GUID(length=16), nullable=False),
        sa.Column("created", sa.DateTime(), nullable=False),
        sa.Column("updated", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(["assignee_id"], ["user_account.id"], name=op.f("fk_backlog_assignee_id_user_account")),
        sa.ForeignKeyConstraint(["owner_id"], ["user_account.id"], name=op.f("fk_backlog_owner_id_user_account")),
        sa.ForeignKeyConstraint(["project_id"], ["project.id"], name=op.f("fk_backlog_project_id_project")),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_backlog")),
    )
    op.create_table(
        "backlog_audit",
        sa.Column("backlog_id", sa.GUID(length=16), nullable=False),
        sa.Column("field_name", sa.String(), nullable=False),
        sa.Column("old_value", sa.String(), nullable=False),
        sa.Column("new_value", sa.String(), nullable=False),
        sa.Column("_sentinel", sa.Integer(), nullable=True),
        sa.Column("id", sa.GUID(length=16), nullable=False),
        sa.Column("created", sa.DateTime(), nullable=False),
        sa.Column("updated", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(["backlog_id"], ["backlog.id"], name=op.f("fk_backlog_audit_backlog_id_backlog")),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_backlog_audit")),
    )
    op.drop_index("ix_user_account_email", table_name="user_account")
    op.create_unique_constraint(op.f("uq_user_account_email"), "user_account", ["email"])
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(op.f("uq_user_account_email"), "user_account", type_="unique")
    op.create_index("ix_user_account_email", "user_account", ["email"], unique=False)
    op.drop_table("backlog_audit")
    op.drop_table("backlog")
    op.drop_table("project")
    # ### end Alembic commands ###
