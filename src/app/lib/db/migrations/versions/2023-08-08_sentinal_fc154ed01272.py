# type: ignore
"""sentinal

Revision ID: fc154ed01272
Revises: 7767efc0c168
Create Date: 2023-08-08 18:54:16.483318

"""
import warnings

import sqlalchemy as sa
from alembic import op
from litestar.contrib.sqlalchemy.types import GUID, ORA_JSONB, DateTimeUTC

__all__ = ["downgrade", "upgrade", "schema_upgrades", "schema_downgrades", "data_upgrades", "data_downgrades"]

sa.GUID = GUID
sa.DateTimeUTC = DateTimeUTC
sa.ORA_JSONB = ORA_JSONB

# revision identifiers, used by Alembic.
revision = "fc154ed01272"
down_revision = "7767efc0c168"
branch_labels = None
depends_on = None


def upgrade():
    with warnings.catch_warnings():
        warnings.filterwarnings("ignore", category=UserWarning)
        with op.get_context().autocommit_block():
            schema_upgrades()
            data_upgrades()


def downgrade():
    with warnings.catch_warnings():
        warnings.filterwarnings("ignore", category=UserWarning)
        with op.get_context().autocommit_block():
            data_downgrades()
            schema_downgrades()


def schema_upgrades():
    """Schema upgrade migrations go here."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "audit",
        sa.Column("backlog_id", sa.GUID(length=16), nullable=False),
        sa.Column("field_name", sa.String(), nullable=False),
        sa.Column("old_value", sa.String(), nullable=False),
        sa.Column("new_value", sa.String(), nullable=False),
        sa.Column("id", sa.GUID(length=16), nullable=False),
        sa.Column("sa_orm_sentinel", sa.Integer(), nullable=True),
        sa.Column("created_at", sa.DateTimeUTC(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTimeUTC(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(["backlog_id"], ["sprint_log.id"], name=op.f("fk_audit_backlog_id_sprint_log")),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_audit")),
    )
    with op.batch_alter_table("project", schema=None) as batch_op:
        batch_op.add_column(sa.Column("sa_orm_sentinel", sa.Integer(), nullable=True))
        batch_op.drop_column("_sentinel")

    with op.batch_alter_table("sprint_log", schema=None) as batch_op:
        batch_op.add_column(sa.Column("sa_orm_sentinel", sa.Integer(), nullable=True))
        batch_op.drop_column("_sentinel")

    with op.batch_alter_table("tag", schema=None) as batch_op:
        batch_op.add_column(sa.Column("sa_orm_sentinel", sa.Integer(), nullable=True))
        batch_op.drop_column("_sentinel")

    with op.batch_alter_table("team", schema=None) as batch_op:
        batch_op.add_column(sa.Column("sa_orm_sentinel", sa.Integer(), nullable=True))
        batch_op.drop_column("_sentinel")

    with op.batch_alter_table("team_invitation", schema=None) as batch_op:
        batch_op.add_column(sa.Column("sa_orm_sentinel", sa.Integer(), nullable=True))
        batch_op.drop_column("_sentinel")

    with op.batch_alter_table("team_member", schema=None) as batch_op:
        batch_op.add_column(sa.Column("sa_orm_sentinel", sa.Integer(), nullable=True))
        batch_op.drop_column("_sentinel")

    with op.batch_alter_table("user_account", schema=None) as batch_op:
        batch_op.add_column(sa.Column("sa_orm_sentinel", sa.Integer(), nullable=True))
        batch_op.drop_column("_sentinel")

    # ### end Alembic commands ###


def schema_downgrades():
    """Schema downgrade migrations go here."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("user_account", schema=None) as batch_op:
        batch_op.add_column(sa.Column("_sentinel", sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.drop_column("sa_orm_sentinel")

    with op.batch_alter_table("team_member", schema=None) as batch_op:
        batch_op.add_column(sa.Column("_sentinel", sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.drop_column("sa_orm_sentinel")

    with op.batch_alter_table("team_invitation", schema=None) as batch_op:
        batch_op.add_column(sa.Column("_sentinel", sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.drop_column("sa_orm_sentinel")

    with op.batch_alter_table("team", schema=None) as batch_op:
        batch_op.add_column(sa.Column("_sentinel", sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.drop_column("sa_orm_sentinel")

    with op.batch_alter_table("tag", schema=None) as batch_op:
        batch_op.add_column(sa.Column("_sentinel", sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.drop_column("sa_orm_sentinel")

    with op.batch_alter_table("sprint_log", schema=None) as batch_op:
        batch_op.add_column(sa.Column("_sentinel", sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.drop_column("sa_orm_sentinel")

    with op.batch_alter_table("project", schema=None) as batch_op:
        batch_op.add_column(sa.Column("_sentinel", sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.drop_column("sa_orm_sentinel")

    op.drop_table("audit")
    # ### end Alembic commands ###


def data_upgrades():
    """Add any optional data upgrade migrations here!"""


def data_downgrades():
    """Add any optional data downgrade migrations here!"""
