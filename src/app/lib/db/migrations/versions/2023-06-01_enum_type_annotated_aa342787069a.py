"""enum_type_annotated

Revision ID: aa342787069a
Revises: 25c13540dcc4
Create Date: 2023-06-01 13:08:27.862397

"""
import sqlalchemy as sa
from alembic import op
from litestar.contrib.sqlalchemy.types import GUID
from sqlalchemy.dialects import postgresql

__all__ = ["downgrade", "upgrade"]


sa.GUID = GUID

# revision identifiers, used by Alembic.
revision = "aa342787069a"
down_revision = "25c13540dcc4"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "backlog",
        "progress",
        existing_type=postgresql.ENUM("empty", "a_third", "two_third", "full", name="progressenum"),
        type_=sa.String(length=50),
        existing_nullable=False,
    )
    op.alter_column(
        "backlog",
        "priority",
        existing_type=postgresql.ENUM("low", "med", "hi", name="priorityenum"),
        type_=sa.String(length=50),
        existing_nullable=False,
    )
    op.alter_column(
        "backlog",
        "status",
        existing_type=postgresql.ENUM("new", "started", "checked_in", "completed", "cancelled", name="statusenum"),
        type_=sa.String(length=50),
        existing_nullable=False,
    )
    op.alter_column(
        "backlog",
        "category",
        existing_type=postgresql.ENUM(
            "ideas",
            "issues",
            "maintenance",
            "finances",
            "innovation",
            "bugs",
            "features",
            "security",
            "attention",
            "backend",
            "database",
            "desktop",
            "mobile",
            "intl",
            "design",
            "analytics",
            "automation",
            name="tagenum",
        ),
        type_=sa.String(length=50),
        existing_nullable=False,
    )
    op.create_index(op.f("ix_backlog_category"), "backlog", ["category"], unique=False)
    op.create_index(op.f("ix_backlog_priority"), "backlog", ["priority"], unique=False)
    op.create_index(op.f("ix_backlog_progress"), "backlog", ["progress"], unique=False)
    op.create_index(op.f("ix_backlog_status"), "backlog", ["status"], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_backlog_status"), table_name="backlog")
    op.drop_index(op.f("ix_backlog_progress"), table_name="backlog")
    op.drop_index(op.f("ix_backlog_priority"), table_name="backlog")
    op.drop_index(op.f("ix_backlog_category"), table_name="backlog")
    op.alter_column(
        "backlog",
        "category",
        existing_type=sa.String(length=50),
        type_=postgresql.ENUM(
            "ideas",
            "issues",
            "maintenance",
            "finances",
            "innovation",
            "bugs",
            "features",
            "security",
            "attention",
            "backend",
            "database",
            "desktop",
            "mobile",
            "intl",
            "design",
            "analytics",
            "automation",
            name="tagenum",
        ),
        existing_nullable=False,
    )
    op.alter_column(
        "backlog",
        "status",
        existing_type=sa.String(length=50),
        type_=postgresql.ENUM("new", "started", "checked_in", "completed", "cancelled", name="statusenum"),
        existing_nullable=False,
    )
    op.alter_column(
        "backlog",
        "priority",
        existing_type=sa.String(length=50),
        type_=postgresql.ENUM("low", "med", "hi", name="priorityenum"),
        existing_nullable=False,
    )
    op.alter_column(
        "backlog",
        "progress",
        existing_type=sa.String(length=50),
        type_=postgresql.ENUM("empty", "a_third", "two_third", "full", name="progressenum"),
        existing_nullable=False,
    )
    # ### end Alembic commands ###
