"""Added users and roles.

Revision ID: 0c47d166cac2
Revises: a1ae9f360adf
Create Date: 2023-04-07 21:25:21.544613
"""
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision = "0c47d166cac2"
down_revision = "a1ae9f360adf"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "role",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created", sa.DateTime(), nullable=False),
        sa.Column("updated", sa.DateTime(), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("description", sa.String(length=255), nullable=True),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_role")),
        sa.UniqueConstraint("name", name=op.f("uq_role_name")),
    )
    op.create_table(
        "userrole",
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("role_id", sa.UUID(), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created", sa.DateTime(), nullable=False),
        sa.Column("updated", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["role_id"], ["role.id"], name=op.f("fk_userrole_role_id_role")
        ),
        sa.ForeignKeyConstraint(
            ["user_id"], ["user.id"], name=op.f("fk_userrole_user_id_user")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_userrole")),
    )
    op.add_column("user", sa.Column("title", sa.String(length=20), nullable=False))
    op.add_column("user", sa.Column("login_count", sa.Integer(), nullable=False))
    op.drop_column("user", "type")
    op.drop_column("user", "name")
    op.drop_column("user", "joined")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "user", sa.Column("joined", sa.DATE(), autoincrement=False, nullable=False)
    )
    op.add_column(
        "user", sa.Column("name", sa.VARCHAR(), autoincrement=False, nullable=False)
    )
    op.add_column(
        "user",
        sa.Column(
            "type",
            postgresql.ENUM("admin", "regular", name="user-types-enum"),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.drop_column("user", "login_count")
    op.drop_column("user", "title")
    op.drop_table("userrole")
    op.drop_table("role")
    # ### end Alembic commands ###
