"""slug_fk

Revision ID: adff94f407f4
Revises:
Create Date: 2023-05-09 14:29:52.949961

"""
import sqlalchemy as sa
from alembic import op

__all__ = ["downgrade", "upgrade"]


# revision identifiers, used by Alembic.
revision = "adff94f407f4"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "project",
        sa.Column("slug", sa.String(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=False),
        sa.Column("start_date", sa.DateTime(), nullable=False),
        sa.Column("end_date", sa.DateTime(), nullable=False),
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("created", sa.DateTime(), nullable=False),
        sa.Column("updated", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_project")),
        sa.UniqueConstraint("slug", name=op.f("uq_project_slug")),
    )
    op.create_table(
        "role",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("created", sa.DateTime(), nullable=False),
        sa.Column("updated", sa.DateTime(), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("description", sa.String(length=255), nullable=True),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_role")),
        sa.UniqueConstraint("name", name=op.f("uq_role_name")),
    )
    op.create_table(
        "user",
        sa.Column("title", sa.String(length=20), nullable=False),
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("created", sa.DateTime(), nullable=False),
        sa.Column("updated", sa.DateTime(), nullable=False),
        sa.Column("email", sa.String(length=320), nullable=False),
        sa.Column("password_hash", sa.String(length=1024), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("is_verified", sa.Boolean(), nullable=False),
        sa.Column("roles", sa.ARRAY(sa.String()), nullable=True),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_user")),
        sa.UniqueConstraint("email", name=op.f("uq_user_email")),
    )
    op.create_table(
        "backlog",
        sa.Column("title", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("ref_id", sa.String(), nullable=True),
        sa.Column("progress", sa.Enum("empty", "a_third", "two_third", "full", name="progressenum"), nullable=True),
        sa.Column("sprint_number", sa.Integer(), nullable=False),
        sa.Column("priority", sa.Enum("low", "med", "hi", name="priorityenum"), nullable=True),
        sa.Column(
            "status",
            sa.Enum("new", "started", "checked_in", "completed", "cancelled", name="statusenum"),
            nullable=True,
        ),
        sa.Column("is_task", sa.Boolean(), nullable=False),
        sa.Column(
            "category",
            sa.Enum(
                "ideas",
                "issues",
                "maintenance",
                "finances",
                "innovation",
                "bugs",
                "features",
                "security",
                "attention",
                "backend",
                "database",
                "desktop",
                "mobile",
                "intl",
                "design",
                "analytics",
                "automation",
                name="tagenum",
            ),
            nullable=True,
        ),
        sa.Column("est_days", sa.Float(), nullable=True),
        sa.Column("beg_date", sa.DateTime(), nullable=False),
        sa.Column("end_date", sa.DateTime(), nullable=False),
        sa.Column("due_date", sa.DateTime(), nullable=False),
        sa.Column("assignee_id", sa.Uuid(), nullable=True),
        sa.Column("owner_id", sa.Uuid(), nullable=False),
        sa.Column("project_slug", sa.String(), nullable=False),
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("created", sa.DateTime(), nullable=False),
        sa.Column("updated", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(["assignee_id"], ["user.id"], name=op.f("fk_backlog_assignee_id_user")),
        sa.ForeignKeyConstraint(["owner_id"], ["user.id"], name=op.f("fk_backlog_owner_id_user")),
        sa.ForeignKeyConstraint(["project_slug"], ["project.slug"], name=op.f("fk_backlog_project_slug_project")),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_backlog")),
    )
    op.create_table(
        "backlog_audit",
        sa.Column("backlog_id", sa.Uuid(), nullable=False),
        sa.Column("field_name", sa.String(), nullable=False),
        sa.Column("old_value", sa.String(), nullable=False),
        sa.Column("new_value", sa.String(), nullable=False),
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("created", sa.DateTime(), nullable=False),
        sa.Column("updated", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(["backlog_id"], ["backlog.id"], name=op.f("fk_backlog_audit_backlog_id_backlog")),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_backlog_audit")),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("backlog_audit")
    op.drop_table("backlog")
    op.drop_table("user")
    op.drop_table("role")
    op.drop_table("project")
    # ### end Alembic commands ###
